(import kiss_spaced_rep.StudyEngine)
(implements StudyEngine)

(loadFrom "kiss-express" "src/ServerUtil.kiss")

(prop &mut :String content "")

(savedVar :String activeUser "")

(defNew []
    [&mut :String image ""
        &mut :Continuation cc null
        &mut :String->Void resolve null
        &mut :Dynamic connection null]
    
    (onLogout req
        (when (= activeUser req.user?.username)
            (set activeUser "")))

    (kissExpress app [3000]
        (let [staticDir (#if STATIC_DIR (#value "STATIC_DIR") (Sys.getCwd))]
            (print "Using $staticDir for static file directory")
            (app.use "/static" (Express.static_.call staticDir))
            (app.get "/" ->[:Dynamic req :Dynamic res next] {
                (unless activeUser
                    (when req.user
                        (set activeUser req.user.username)))
                (let [output "$(kissExpressHeader req)$?(when (and activeUser (= req.user?.username activeUser)) content)"]
                    (res.send output))
            })
            (app.get "/continue" ->[req res next] {
                (when (and activeUser (= req.user?.username activeUser))
                    (whenLet [_cc cc] (set cc null) (_cc)))
                (res.redirect "/")
            })
            (app.get "/submit" ->[:Dynamic req :Dynamic res next] {
                (when (and activeUser (= req.user?.username activeUser))
                    (whenLet [_resolve resolve] (set resolve null) (_resolve req.query.value)))
                (res.redirect "/")
            })
            (app.get "/restart" ->[req :Dynamic res next] {
                (res.redirect "/")
                (when (and activeUser (= req.user?.username activeUser))
                    (connection.close)
                    (kiss_spaced_rep.Main_.main))
            }))))

(method :Void clear []
    (set content ""))

(method :Void print [text]
    (+= content text))

(method :Void println [text]
    (+= content text "<br />"))

(method :Void showImage [path] 
    (+= content "<img src=\"/static/${path}\" /><br />"))

(method :Void delayForUserInput [cc &opt :String text]
    (set this.cc cc)
    (unless text
        (set text "Next"))
    (+= content "<br /><a href=\"/continue\">${text}</a><br />"))

(method :Void getUserInput [resolve]
    (set this.resolve resolve)
    (+= content "<br /><input type=\"text\" id=\"value\"><br /><button onclick=\"window.open('/submit?value=' + document.getElementById('value').value, '_self');\">Submit</a><br />"))

(method :Void promptForRefresh [refresh]
    (delayForUserInput refresh "Refresh"))
